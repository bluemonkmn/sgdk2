<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="colErrObjType.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="colObjName.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="colMessage.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="mnuLog.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="mnuLog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="imgIcons.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>113, 17</value>
  </metadata>
  <data name="imgIcons.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAW
        CQAAAk1TRnQBSQFMAgEBAgEAAQgBAAEIAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEYBgABDB4AA9gBsQGwAbEBkQGQAZEBegF5AnoBeQF6AZEBkAGRAbEBsAGxA9gMAAFI
        AbsB1gEPAYwBqQEPAYwBqQEPAYwBqQEPAYwBqQEPAYwBqQEPAYwBqQEPAYwBqQEPAYwBqQEPAYwBqQEP
        AYwBqQEPAYwBqQEPAYwBqQEPAYwBqQEPAYwBqQFIAbsB1mYAA+0BsgGxAbIBkgKRAa4BrQGsAsEBwgLM
        Ac0CzAHNAsEBwgGuAa0BrAGSApEBsgGxAbID7QYAATcBtQHSASUByQHpARkBxgHxARUBwgHwARMBwQHw
        ARIBwAHwARMBwQHwARMBwQHwARMBwQHwARQBwQHwARUBwgHwARUBwwHwARYBwwHwARcBxAHxASEBwwHk
        ATcBtQHSYwAD7QGlAaQBpQGkAqMCsQHFAXkBeAHIAUwBSwHHATMBMgHEATMBMgHEAUwBSwHHAXoBeQHJ
        ArEBxQGkAqMBpQGkAaUD7QMAAXIBywHfARgBrgHPASIBzQHyARsByAHxARgBxQHxARYBxAHxARYBwwHw
        BgABGQHGAfEBGwHIAfEBHgHKAfIBHgHKAfIBIQHMAfEBFgGrAc0BcgHLAd9jAAGyAbEBsgGkAqMCnQHI
        AkcBxwErASoBxAErASoBxALuAfoC8AH7AUQBQwHLASsBKgHEAUgBRwHHAp0ByAGkAqMBsgGxAbIDAAHm
        AfYB+QE3AbUB0gEmAcYB5AEmAdEB8wEhAc0B8gEfAcsB8gEeAcoB8gYAASIBzQHzASYB0QHzAScB0gH0
        ASgB0wH0ASUBxQHjATcBtQHSAeYB9gH5YAAD2AGSApECsQHGAkcBxwErASoBxAErASoBxAErASoBxAb/
        AUgBRwHMASsBKgHEASsBKgHEAUgBRwHHArEBxQGSApED2AMAAYMB0QHjARcBrAHNATQB2wH0ATAB2QH1
        AS0B1wH1ASwB1gH0ASwB1gH0AS4B1wH1ATAB2QH1ATAB2QH1ATIB2wH1ATMB2gHzARYBqgHLAYMB0QHj
        YwABsQGwAbEBrgGtAawBewF6AckBLAErAcQBKwEqAcQBKwEqAcQBKwEqAcQBOwE6AcgBPAE7AckBLQEs
        AcQBKwEqAcQBKwEqAcQBKwEqAcQBegF5AckBrgGtAawBsQGwAbEDAAHuAfkB+wE3AbUB0gErAcYB3wE/
        AeYB+AE+AeQB9wE9AeMB9wEcAWgBcQEcAWgBcQE7AeIB9wE7AeIB9wE8AeMB9wEqAccB4AE3AbUB0gHu
        AfkB+2MAAZEBkAGRAsEBwgFSAVEByQItAcUBLAErAcQBKwEqAcQBKwEqAcQCyAHwAs0B8QE+AT0ByQEr
        ASoBxAErASoBxAErASoBxAFMAUsBxwLBAcIBkQGQAZEGAAGQAdYB5gEWAaoBywFHAeoB9gFLAfAB+gFJ
        Ae4B+QYAAUUB6gH5AUUB6gH5AUAB5QH1ARYBqgHLAZAB1gHmZgABegF5AXoCzAHNAUUBRAHJATQBMwHH
        AS8BLgHFASwBKwHEASsBKgHEAv0E/wFEAUMBywErASoBxAErASoBxAErASoBxAE0ATMBxALMAc0BegF5
        AXoGAAH0AfsB/QE3AbUB0gEpAcIB2wFPAfMB+wFOAfEB+gYAAUoB7wH6AUoB7wH6ASsBxgHfATcBtQHS
        AfQB+wH9ZgABegF5AXoCzAHNAVYBVQHOAUMBQgHLATgBNwHIATIBMQHGAS4BLQHFAv0B/gP/AUsBSgHN
        AS0BLAHEAS0BLAHEAS4BLQHFATkBOAHGAswBzQF6AXkBegkAAZ4B2wHpARUBqQHLAUkB6gH0AVEB9AH7
        BgABTwHyAfoBSAHqAfYBFQGpAcsBngHbAelpAAGRAZABkQLBAcICbwHTAVgBVwHQAksBzQFBAUABygE6
        ATkByAb/AlUB0AEzATIBxgE2ATUBxwE6ATkByAFZAVgBywLBAcIBkQGQAZEJAAH5Af0B/gE3AbUB0gEm
        Ab8B2QFbAfYB+wYAAVIB9QH7AS0BxgHdATcBtQHSAfkB/QH+aQABsQGwAbEBrgGtAawCjgHSAmkB1QFh
        AWAB0wFYAVcB0AFQAU8Bzgb/AmkB1QFGAUUBywFKAUkBzQFQAU8BzgGHAYYBzgGuAa0BrAGxAbABsQwA
        AawB4AHsARQBqQHKAUgB6AHzAVIB9QH7AVIB9QH7AUsB7QH2ARUBqQHLAawB4AHsbAAD2AGSApECtgHJ
        AXMBcgHVAW8BbgHXAWoBaQHWAWYBZQHUBv8CgwHdAWABXwHTAWMBYgHUAWsBagHSArQByAGSApED2AwA
        AfwC/gE3AbUB0gEkAbsB1gFSAfUB+wFSAfUB+wEsAcYB3QE3AbUB0gH8Av5vAAGyAbEBsgGkAqMCqAHQ
        AXQBcwHVAnMB2AFyAXEB2AL0AfwC9AH8AZABjwHgAXABbwHXAXIBcQHVAqUBzQGkAqMBsgGxAbISAAG9
        AeYB8AEUAagBygFFAeUB8QFLAewB9QEVAakBywG9AeYB8HIAA+0BpQGkAaUBpAKjArYByQGRAZAB1AJ5
        AdYBdAFzAdcBdAFzAdcCeQHWAY8BjgHSArUByAGkAqMBpQGkAaUD7RUAATcBtQHSASEBuQHVASwBxgHd
        ATcBtQHSeAAD7QGyAbEBsgGSApEBrgGtAawCwQHCAswBzQLMAc0CwQHCAa4BrQGsAZICkQGyAbEBsgPt
        GAABygHsAfMBJgGvAc4BJgGvAc4BygHsAfN+AAPYAbEBsAGxAZEBkAGRAXoBeQJ6AXkBegGRAZABkQGx
        AbABsQPYIQAB/AL+AfwC/nUAAUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8BAAHw
        AQ8GAAHAAQMGAAGAAQEGAAGAAQEIAAGAAQEGAAGAAQEGAAHAAQMGAAHAAQMGAAHgAQcGAAHgAQcGAAHw
        AQ8GAAHwAQ8EAAGAAQEB+AEfBAABgAEBAfwBPwQAAcABAwH8AT8EAAHwAQ8B/gF/BAAL
</value>
  </data>
</root>